{
	"live loop": {
		"prefix": "live_l",
		"body": [
			"live_loop :$1 do",
			"\t$0",
			"\tsleep",
			"end",
		],
	},
	"euclidean rhytmhs": {
		"prefix": "spread",
		"body": "(spread $1, $2, rotate: $0)"
	},
	"finite loops": {
		"prefix": ".time",
		"body": [
			".times do",
			"\t$0",
			"\tsleep",
			"end",
		],
	},
	"rings": {
		"prefix": "ring",
		"body": "(ring $0)",
	},
	"knits": {
		"prefix": "knit",
		"body": "(knit $1, $0)"
	},
	"line": {
		"prefix": "line",
		"body": "(line $1, $2, steps: $0)",
	},
	"range": {
		"prefix": "range",
		"body": "(range $1, $2, step: $0)",
	},
	"progression": {
		"prefix": "chord_d",
		"body": "(chord_degree ${1:degree}, ${2:tonic}, ${3:scale_name}, $0)",
	},
	"effects": {
		"prefix": "with_f",
		"body": [
		"with_fx :$1 do",
		"\t$0 ",
		"end"
		]
	},
	// RANDOM METHODS
	"rrand float": {
		"prefix": "rrand",
		"body": "(rrand $1, $0)"
	},
	"rrand integer": {
		"prefix": "rrand_i",
		"body": "(rrand $1, $0)"
	},
	"ratio distribution": {
		"prefix": "rdi",
		"body": "(rdist $1, $0)",
	},
	// Melody
	"pattern melody": {
		"prefix": "play_patt",
		"body": "play_pattern_timed $1,$2, release: $0",
		"description": "release: (ring x,y,z,...).tick do not work"
	},
	"density": {
		"prefix": "density",
		"body": [
			"density $1 do",
			"\t$0",
			"end"
		],
	},
	"density dice": {
		"prefix": "density di",
		"body": [
			"density dice($1) do",
			"\t$0",
			"end"
		],
	},

	// FUNCTION
	"function": {
	"prefix": "define",
	"body": [
		"define :$1 do |$2|",
		"\t$0",
		"end"]
	},
	
	// RINGS
	"reverse": {
		"prefix": ".rev",
		"body": ".reverse",
	},
	"sort": {
		"prefix": ".sor",
		"body": ".sort"
	},
	"shuffle": {
		"prefix": ".shuf",
		"body": ".shuffle"
	},
	"reflect": {
		"prefix": ".refl",
		"body": ".reflect",
	},
	"mirror": {
		"prefix": ".mir",
		"body": ".mirror"
	},
	// Ring methods + parameters
	"pick": {
		"prefix": ".pic",
		"body": ".pick($0)"
	},
	"take": {
		"prefix": ".tak",
		"body": ".take($0)"
	},
	"drop": {
		"prefix": ".dro",
		"body": ".drop($0)",
	},
	"stretch": {
		"prefix": ".stret",
		"body": ".stretch($0)",
	},
	"repeat": {
		"prefix": ".rep",
		"body": ".repeat($0)",
	},
	"scale" : {
		"prefix": ".scal",
		"body": ".scale($0)"
	},
	// Conditional 
	"conditionals": {
		"prefix": "if ",
		"body": [
			"if $1",
			"\t$2",
			"else",
			"\t$0",
			"end"
		]
	},
	// Threads
	"threads": {
		"prefix": "in_th",
		"body": [
			"in_thread do",
			"\t$0",
			"end"
		]
	},
}
